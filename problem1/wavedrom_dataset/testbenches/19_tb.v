//////////////////////////////////////////////////////////////
//                                                          //
// This testbench has been generated by the Verilog         //
// testbench generator                .                     //
// Copyright (c) 2012-2022 EDAUtils LLP                 //
// Contact help@edautils.com  for support/info.//
//                                                          //
//                                                          //
//////////////////////////////////////////////////////////////
//
//
// Generated by : protim on 4/24/25, 3:52 AM
//
//
module testbench;
	reg [0:113] indata_array;
	reg bench_reset;
	wire bench_clk;
	wire bench_rst;
	wire [31:0]bench_avm_address_i;
	wire [3:0]bench_avm_byteenable_i;
	wire bench_avm_read_i;
	wire [31:0]bench_avm_readdata_o;
	wire [7:0]bench_avm_burstcount_i;
	wire bench_avm_write_i;
	wire [31:0]bench_avm_writedata_i;
	wire bench_avm_waitrequest_o;
	wire bench_avm_readdatavalid_o;
	wire [31:0]bench_wbm_adr_o;
	wire [31:0]bench_wbm_dat_o;
	wire [3:0]bench_wbm_sel_o;
	wire bench_wbm_we_o;
	wire bench_wbm_cyc_o;
	wire bench_wbm_stb_o;
	wire [2:0]bench_wbm_cti_o;
	wire [1:0]bench_wbm_bte_o;
	wire [31:0]bench_wbm_dat_i;
	wire bench_wbm_ack_i;
	wire bench_wbm_err_i;
	wire bench_wbm_rty_i;



	assign bench_clk = indata_array[0:0];
	assign bench_rst = indata_array[1:1];
	assign bench_avm_address_i = indata_array[2:33];
	assign bench_avm_byteenable_i = indata_array[34:37];
	assign bench_avm_read_i = indata_array[38:38];
	assign bench_avm_burstcount_i = indata_array[39:46];
	assign bench_avm_write_i = indata_array[47:47];
	assign bench_avm_writedata_i = indata_array[48:79];
	assign bench_wbm_dat_i = indata_array[80:111];
	assign bench_wbm_ack_i = indata_array[112:112];
	assign bench_wbm_err_i = indata_array[113:113];
	assign bench_wbm_rty_i = indata_array[114:114];

	initial
	begin
    $dumpfile("19.vcd");
    $dumpvars(1, testbench);
		#10 bench_reset = 1'b0;
	end

	always
	begin
		#5  indata_array = $random;
	end

	avalon_to_wb_bridge inst(
        .clk(bench_clk), 
        .rst(bench_rst), 
        .avm_address_i(bench_avm_address_i), 
        .avm_byteenable_i(bench_avm_byteenable_i), 
        .avm_read_i(bench_avm_read_i), 
        .avm_readdata_o(bench_avm_readdata_o), 
        .avm_burstcount_i(bench_avm_burstcount_i), 
        .avm_write_i(bench_avm_write_i), 
        .avm_writedata_i(bench_avm_writedata_i), 
        .avm_waitrequest_o(bench_avm_waitrequest_o), 
        .avm_readdatavalid_o(bench_avm_readdatavalid_o), 
        .wbm_adr_o(bench_wbm_adr_o), 
        .wbm_dat_o(bench_wbm_dat_o), 
        .wbm_sel_o(bench_wbm_sel_o), 
        .wbm_we_o(bench_wbm_we_o), 
        .wbm_cyc_o(bench_wbm_cyc_o), 
        .wbm_stb_o(bench_wbm_stb_o), 
        .wbm_cti_o(bench_wbm_cti_o), 
        .wbm_bte_o(bench_wbm_bte_o), 
        .wbm_dat_i(bench_wbm_dat_i), 
        .wbm_ack_i(bench_wbm_ack_i), 
        .wbm_err_i(bench_wbm_err_i), 
        .wbm_rty_i(bench_wbm_rty_i)
    );

	initial
	begin
		$monitor($time, " bench_reset = %b, clk = %b , rst = %b , avm_address_i = %b , avm_byteenable_i = %b , avm_read_i = %b , avm_burstcount_i = %b , avm_write_i = %b , avm_writedata_i = %b , wbm_dat_i = %b , wbm_ack_i = %b , wbm_err_i = %b , wbm_rty_i = %b , avm_readdata_o = %b , avm_waitrequest_o = %b , avm_readdatavalid_o = %b , wbm_adr_o = %b , wbm_dat_o = %b , wbm_sel_o = %b , wbm_we_o = %b , wbm_cyc_o = %b , wbm_stb_o = %b , wbm_cti_o = %b , wbm_bte_o = %b  ",
			bench_reset, bench_clk, bench_rst, bench_avm_address_i, bench_avm_byteenable_i, bench_avm_read_i, bench_avm_burstcount_i, bench_avm_write_i, bench_avm_writedata_i, bench_wbm_dat_i, bench_wbm_ack_i, bench_wbm_err_i, bench_wbm_rty_i, bench_avm_readdata_o, bench_avm_waitrequest_o, bench_avm_readdatavalid_o, bench_wbm_adr_o, bench_wbm_dat_o, bench_wbm_sel_o, bench_wbm_we_o, bench_wbm_cyc_o, bench_wbm_stb_o, bench_wbm_cti_o, bench_wbm_bte_o);
	end

	initial
	begin
		#199 $finish;
	end

endmodule
