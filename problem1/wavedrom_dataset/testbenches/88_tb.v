//////////////////////////////////////////////////////////////
//                                                          //
// This testbench has been generated by the Verilog         //
// testbench generator                .                     //
// Copyright (c) 2012-2022 EDAUtils LLP                 //
// Contact help@edautils.com  for support/info.//
//                                                          //
//                                                          //
//////////////////////////////////////////////////////////////
//
//
// Generated by : protim on 4/24/25, 4:25 AM
//
//
module testbench;
	reg [0:101] indata_array;
	reg bench_reset;
	wire bench_clk;
	wire bench_clk_en;
	wire bench_hold;
	wire [98:0]bench_request;
	wire [98:0]bench_grant;
	wire [98:0]bench_arb_wait;



	assign bench_clk = indata_array[0:0];
	assign bench_clk_en = indata_array[1:1];
	assign bench_hold = indata_array[2:2];
	assign bench_request = indata_array[3:101];

	initial
	begin
    $dumpfile("88.vcd");
    $dumpvars(1, testbench);
		#10 bench_reset = 1'b0;
	end

	always
	begin
		#5  indata_array = $random;
	end

	e16_arbiter_priority inst(
        .clk(bench_clk), 
        .clk_en(bench_clk_en), 
        .reset(bench_reset), 
        .hold(bench_hold), 
        .request(bench_request), 
        .grant(bench_grant), 
        .arb_wait(bench_arb_wait)
    );

	initial
	begin
		$monitor($time, " bench_reset = %b, clk = %b , clk_en = %b , hold = %b , request = %b , grant = %b , arb_wait = %b  ",
			bench_reset, bench_clk, bench_clk_en, bench_hold, bench_request, bench_grant, bench_arb_wait);
	end

	initial
	begin
		#199 $finish;
	end

endmodule
