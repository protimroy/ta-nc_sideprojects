//////////////////////////////////////////////////////////////
//                                                          //
// This testbench has been generated by the Verilog         //
// testbench generator                .                     //
// Copyright (c) 2012-2022 EDAUtils LLP                 //
// Contact help@edautils.com  for support/info.//
//                                                          //
//                                                          //
//////////////////////////////////////////////////////////////
//
//
// Generated by : protim on 4/24/25, 3:42 AM
//
//
module testbench;
	reg [0:1] indata_array;
	reg bench_reset;
	wire bench_new_rom;
	wire [31:0]bench_num_bytes;
	wire [7:0]bench_q;
	wire bench_safe;
	wire bench_clk;
	wire bench_incr_addr;
	wire bench_reset_n;



	assign bench_clk = indata_array[0:0];
	assign bench_incr_addr = indata_array[1:1];
	assign bench_reset_n = indata_array[2:2];

	initial
	begin
    $dumpfile("3.vcd");
    $dumpvars(1, testbench);
		#10 bench_reset = 1'b0;
	end

	always
	begin
		#5  indata_array = $random;
	end

	jtag_uart_0_drom_module inst(
        .new_rom(bench_new_rom), 
        .num_bytes(bench_num_bytes), 
        .q(bench_q), 
        .safe(bench_safe), 
        .clk(bench_clk), 
        .incr_addr(bench_incr_addr), 
        .reset_n(bench_reset_n)
    );

	initial
	begin
		$monitor($time, " bench_reset = %b, clk = %b , incr_addr = %b , reset_n = %b , new_rom = %b , num_bytes = %b , q = %b , safe = %b  ",
			bench_reset, bench_clk, bench_incr_addr, bench_reset_n, bench_new_rom, bench_num_bytes, bench_q, bench_safe);
	end

	initial
	begin
		#199 $finish;
	end

endmodule
