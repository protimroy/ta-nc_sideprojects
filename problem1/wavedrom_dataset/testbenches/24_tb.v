//////////////////////////////////////////////////////////////
//                                                          //
// This testbench has been generated by the Verilog         //
// testbench generator                .                     //
// Copyright (c) 2012-2022 EDAUtils LLP                 //
// Contact help@edautils.com  for support/info.//
//                                                          //
//                                                          //
//////////////////////////////////////////////////////////////
//
//
// Generated by : protim on 4/24/25, 3:51 AM
//
//
module testbench;
	reg [0:40] indata_array;
	reg bench_reset;
	wire bench_irq;
	wire [31:0]bench_readdata;
	wire [1:0]bench_address;
	wire bench_chipselect;
	wire bench_clk;
	wire [3:0]bench_in_port;
	wire bench_reset_n;
	wire bench_write_n;
	wire [31:0]bench_writedata;



	assign bench_address = indata_array[0:1];
	assign bench_chipselect = indata_array[2:2];
	assign bench_clk = indata_array[3:3];
	assign bench_in_port = indata_array[4:7];
	assign bench_reset_n = indata_array[8:8];
	assign bench_write_n = indata_array[9:9];
	assign bench_writedata = indata_array[10:41];

	initial
	begin
    $dumpfile("24.vcd");
    $dumpvars(1, testbench);
		#10 bench_reset = 1'b0;
	end

	always
	begin
		#5  indata_array = $random;
	end

	soc_system_button_pio inst(
        .irq(bench_irq), 
        .readdata(bench_readdata), 
        .address(bench_address), 
        .chipselect(bench_chipselect), 
        .clk(bench_clk), 
        .in_port(bench_in_port), 
        .reset_n(bench_reset_n), 
        .write_n(bench_write_n), 
        .writedata(bench_writedata)
    );

	initial
	begin
		$monitor($time, " bench_reset = %b, address = %b , chipselect = %b , clk = %b , in_port = %b , reset_n = %b , write_n = %b , writedata = %b , irq = %b , readdata = %b  ",
			bench_reset, bench_address, bench_chipselect, bench_clk, bench_in_port, bench_reset_n, bench_write_n, bench_writedata, bench_irq, bench_readdata);
	end

	initial
	begin
		#199 $finish;
	end

endmodule
