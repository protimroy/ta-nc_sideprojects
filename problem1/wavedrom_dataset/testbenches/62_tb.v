//////////////////////////////////////////////////////////////
//                                                          //
// This testbench has been generated by the Verilog         //
// testbench generator                .                     //
// Copyright (c) 2012-2022 EDAUtils LLP                 //
// Contact help@edautils.com  for support/info.//
//                                                          //
//                                                          //
//////////////////////////////////////////////////////////////
//
//
// Generated by : protim on 4/24/25, 4:05 AM
//
//
module testbench;
	reg [0:58] indata_array;
	reg bench_reset;
	wire [31:0]bench_stego_img_addr;
	wire [31:0]bench_msg_addr;
	wire bench_begin_decoding;
	wire bench_done_decoding;
	wire bench_S_AXI_ACLK;
	wire bench_S_AXI_ARESETN;
	wire [4:0]bench_S_AXI_AWADDR;
	wire [2:0]bench_S_AXI_AWPROT;
	wire bench_S_AXI_AWVALID;
	wire bench_S_AXI_AWREADY;
	wire [31:0]bench_S_AXI_WDATA;
	wire [3:0]bench_S_AXI_WSTRB;
	wire bench_S_AXI_WVALID;
	wire bench_S_AXI_WREADY;
	wire [1:0]bench_S_AXI_BRESP;
	wire bench_S_AXI_BVALID;
	wire bench_S_AXI_BREADY;
	wire [4:0]bench_S_AXI_ARADDR;
	wire [2:0]bench_S_AXI_ARPROT;
	wire bench_S_AXI_ARVALID;
	wire bench_S_AXI_ARREADY;
	wire [31:0]bench_S_AXI_RDATA;
	wire [1:0]bench_S_AXI_RRESP;
	wire bench_S_AXI_RVALID;
	wire bench_S_AXI_RREADY;



	assign bench_done_decoding = indata_array[0:0];
	assign bench_S_AXI_ACLK = indata_array[1:1];
	assign bench_S_AXI_ARESETN = indata_array[2:2];
	assign bench_S_AXI_AWADDR = indata_array[3:7];
	assign bench_S_AXI_AWPROT = indata_array[8:10];
	assign bench_S_AXI_AWVALID = indata_array[11:11];
	assign bench_S_AXI_WDATA = indata_array[12:43];
	assign bench_S_AXI_WSTRB = indata_array[44:47];
	assign bench_S_AXI_WVALID = indata_array[48:48];
	assign bench_S_AXI_BREADY = indata_array[49:49];
	assign bench_S_AXI_ARADDR = indata_array[50:54];
	assign bench_S_AXI_ARPROT = indata_array[55:57];
	assign bench_S_AXI_ARVALID = indata_array[58:58];
	assign bench_S_AXI_RREADY = indata_array[59:59];

	initial
	begin
    $dumpfile("62.vcd");
    $dumpvars(1, testbench);
		#10 bench_reset = 1'b0;
	end

	always
	begin
		#5  indata_array = $random;
	end

	decoder_axi_s_v1_0_S00_AXI inst(
        .stego_img_addr(bench_stego_img_addr), 
        .msg_addr(bench_msg_addr), 
        .begin_decoding(bench_begin_decoding), 
        .done_decoding(bench_done_decoding), 
        .S_AXI_ACLK(bench_S_AXI_ACLK), 
        .S_AXI_ARESETN(bench_S_AXI_ARESETN), 
        .S_AXI_AWADDR(bench_S_AXI_AWADDR), 
        .S_AXI_AWPROT(bench_S_AXI_AWPROT), 
        .S_AXI_AWVALID(bench_S_AXI_AWVALID), 
        .S_AXI_AWREADY(bench_S_AXI_AWREADY), 
        .S_AXI_WDATA(bench_S_AXI_WDATA), 
        .S_AXI_WSTRB(bench_S_AXI_WSTRB), 
        .S_AXI_WVALID(bench_S_AXI_WVALID), 
        .S_AXI_WREADY(bench_S_AXI_WREADY), 
        .S_AXI_BRESP(bench_S_AXI_BRESP), 
        .S_AXI_BVALID(bench_S_AXI_BVALID), 
        .S_AXI_BREADY(bench_S_AXI_BREADY), 
        .S_AXI_ARADDR(bench_S_AXI_ARADDR), 
        .S_AXI_ARPROT(bench_S_AXI_ARPROT), 
        .S_AXI_ARVALID(bench_S_AXI_ARVALID), 
        .S_AXI_ARREADY(bench_S_AXI_ARREADY), 
        .S_AXI_RDATA(bench_S_AXI_RDATA), 
        .S_AXI_RRESP(bench_S_AXI_RRESP), 
        .S_AXI_RVALID(bench_S_AXI_RVALID), 
        .S_AXI_RREADY(bench_S_AXI_RREADY)
    );

	initial
	begin
		$monitor($time, " bench_reset = %b, done_decoding = %b , S_AXI_ACLK = %b , S_AXI_ARESETN = %b , S_AXI_AWADDR = %b , S_AXI_AWPROT = %b , S_AXI_AWVALID = %b , S_AXI_WDATA = %b , S_AXI_WSTRB = %b , S_AXI_WVALID = %b , S_AXI_BREADY = %b , S_AXI_ARADDR = %b , S_AXI_ARPROT = %b , S_AXI_ARVALID = %b , S_AXI_RREADY = %b , stego_img_addr = %b , msg_addr = %b , begin_decoding = %b , S_AXI_AWREADY = %b , S_AXI_WREADY = %b , S_AXI_BRESP = %b , S_AXI_BVALID = %b , S_AXI_ARREADY = %b , S_AXI_RDATA = %b , S_AXI_RRESP = %b , S_AXI_RVALID = %b  ",
			bench_reset, bench_done_decoding, bench_S_AXI_ACLK, bench_S_AXI_ARESETN, bench_S_AXI_AWADDR, bench_S_AXI_AWPROT, bench_S_AXI_AWVALID, bench_S_AXI_WDATA, bench_S_AXI_WSTRB, bench_S_AXI_WVALID, bench_S_AXI_BREADY, bench_S_AXI_ARADDR, bench_S_AXI_ARPROT, bench_S_AXI_ARVALID, bench_S_AXI_RREADY, bench_stego_img_addr, bench_msg_addr, bench_begin_decoding, bench_S_AXI_AWREADY, bench_S_AXI_WREADY, bench_S_AXI_BRESP, bench_S_AXI_BVALID, bench_S_AXI_ARREADY, bench_S_AXI_RDATA, bench_S_AXI_RRESP, bench_S_AXI_RVALID);
	end

	initial
	begin
		#199 $finish;
	end

endmodule
