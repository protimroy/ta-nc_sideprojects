//////////////////////////////////////////////////////////////
//                                                          //
// This testbench has been generated by the Verilog         //
// testbench generator                .                     //
// Copyright (c) 2012-2022 EDAUtils LLP                 //
// Contact help@edautils.com  for support/info.//
//                                                          //
//                                                          //
//////////////////////////////////////////////////////////////
//
//
// Generated by : protim on 4/24/25, 4:06 AM
//
//
module testbench;
	reg [0:400] indata_array;
	reg bench_reset;
	wire bench_clk;
	wire bench_cmd_ready;
	wire bench_param_ready;
	wire [7:0]bench_cmd_data;
	wire [7:0]bench_param_data;
	wire [2:0]bench_mcu_mapper;
	wire bench_mcu_rrq;
	wire bench_mcu_write;
	wire bench_mcu_wrq;
	wire bench_mcu_rq_rdy;
	wire [7:0]bench_mcu_data_out;
	wire [7:0]bench_mcu_data_in;
	wire [7:0]bench_spi_data_out;
	wire [31:0]bench_spi_byte_cnt;
	wire [2:0]bench_spi_bit_cnt;
	wire [23:0]bench_addr_out;
	wire [23:0]bench_saveram_mask_out;
	wire [23:0]bench_rom_mask_out;
	wire bench_ramsel_out;
	wire bench_SD_DMA_EN;
	wire bench_SD_DMA_STATUS;
	wire bench_SD_DMA_NEXTADDR;
	wire [7:0]bench_SD_DMA_SRAM_DATA;
	wire bench_SD_DMA_SRAM_WE;
	wire [1:0]bench_SD_DMA_TGT;
	wire bench_SD_DMA_PARTIAL;
	wire [10:0]bench_SD_DMA_PARTIAL_START;
	wire [10:0]bench_SD_DMA_PARTIAL_END;
	wire [10:0]bench_dac_addr_out;
	wire bench_DAC_STATUS;
	wire bench_dac_play_out;
	wire bench_dac_reset_out;
	wire [13:0]bench_msu_addr_out;
	wire [6:0]bench_MSU_STATUS;
	wire [5:0]bench_msu_status_reset_out;
	wire [5:0]bench_msu_status_set_out;
	wire bench_msu_status_reset_we;
	wire [31:0]bench_msu_addressrq;
	wire [15:0]bench_msu_trackrq;
	wire [7:0]bench_msu_volumerq;
	wire [13:0]bench_msu_ptr_out;
	wire bench_msu_reset_out;
	wire [7:0]bench_bsx_regs_reset_out;
	wire [7:0]bench_bsx_regs_set_out;
	wire bench_bsx_regs_reset_we;
	wire [55:0]bench_rtc_data_out;
	wire bench_rtc_pgm_we;
	wire bench_srtc_reset;
	wire [23:0]bench_dspx_pgm_data_out;
	wire [10:0]bench_dspx_pgm_addr_out;
	wire bench_dspx_pgm_we_out;
	wire [15:0]bench_dspx_dat_data_out;
	wire [10:0]bench_dspx_dat_addr_out;
	wire bench_dspx_dat_we_out;
	wire bench_dspx_reset_out;
	wire [3:0]bench_featurebits_out;
	wire [31:0]bench_snes_cpuclk_freq;
	wire [31:0]bench_snes_sysclk_freq;
	wire [31:0]bench_snes_read_freq;
	wire [31:0]bench_snes_write_freq;
	wire [31:0]bench_snes_pard_freq;
	wire [31:0]bench_snes_pawr_freq;
	wire [31:0]bench_snes_refresh_freq;
	wire [31:0]bench_snes_romsel_freq;
	wire [12:0]bench_mcu_bram_addr;
	wire [7:0]bench_mcu_bram_data_in;
	wire [7:0]bench_mcu_bram_data_out;
	wire bench_mcu_bram_we;



	assign bench_clk = indata_array[0:0];
	assign bench_cmd_ready = indata_array[1:1];
	assign bench_param_ready = indata_array[2:2];
	assign bench_cmd_data = indata_array[3:10];
	assign bench_param_data = indata_array[11:18];
	assign bench_mcu_rq_rdy = indata_array[19:19];
	assign bench_mcu_data_in = indata_array[20:27];
	assign bench_spi_byte_cnt = indata_array[28:59];
	assign bench_spi_bit_cnt = indata_array[60:62];
	assign bench_SD_DMA_STATUS = indata_array[63:63];
	assign bench_SD_DMA_NEXTADDR = indata_array[64:64];
	assign bench_SD_DMA_SRAM_DATA = indata_array[65:72];
	assign bench_SD_DMA_SRAM_WE = indata_array[73:73];
	assign bench_DAC_STATUS = indata_array[74:74];
	assign bench_MSU_STATUS = indata_array[75:81];
	assign bench_msu_addressrq = indata_array[82:113];
	assign bench_msu_trackrq = indata_array[114:129];
	assign bench_msu_volumerq = indata_array[130:137];
	assign bench_snes_cpuclk_freq = indata_array[138:169];
	assign bench_snes_sysclk_freq = indata_array[170:201];
	assign bench_snes_read_freq = indata_array[202:233];
	assign bench_snes_write_freq = indata_array[234:265];
	assign bench_snes_pard_freq = indata_array[266:297];
	assign bench_snes_pawr_freq = indata_array[298:329];
	assign bench_snes_refresh_freq = indata_array[330:361];
	assign bench_snes_romsel_freq = indata_array[362:393];
	assign bench_mcu_bram_data_in = indata_array[394:401];

	initial
	begin
    $dumpfile("66.vcd");
    $dumpvars(1, testbench);
		#10 bench_reset = 1'b0;
	end

	always
	begin
		#5  indata_array = $random;
	end

	mcu_cmd inst(
        .clk(bench_clk), 
        .cmd_ready(bench_cmd_ready), 
        .param_ready(bench_param_ready), 
        .cmd_data(bench_cmd_data), 
        .param_data(bench_param_data), 
        .mcu_mapper(bench_mcu_mapper), 
        .mcu_rrq(bench_mcu_rrq), 
        .mcu_write(bench_mcu_write), 
        .mcu_wrq(bench_mcu_wrq), 
        .mcu_rq_rdy(bench_mcu_rq_rdy), 
        .mcu_data_out(bench_mcu_data_out), 
        .mcu_data_in(bench_mcu_data_in), 
        .spi_data_out(bench_spi_data_out), 
        .spi_byte_cnt(bench_spi_byte_cnt), 
        .spi_bit_cnt(bench_spi_bit_cnt), 
        .addr_out(bench_addr_out), 
        .saveram_mask_out(bench_saveram_mask_out), 
        .rom_mask_out(bench_rom_mask_out), 
        .ramsel_out(bench_ramsel_out), 
        .SD_DMA_EN(bench_SD_DMA_EN), 
        .SD_DMA_STATUS(bench_SD_DMA_STATUS), 
        .SD_DMA_NEXTADDR(bench_SD_DMA_NEXTADDR), 
        .SD_DMA_SRAM_DATA(bench_SD_DMA_SRAM_DATA), 
        .SD_DMA_SRAM_WE(bench_SD_DMA_SRAM_WE), 
        .SD_DMA_TGT(bench_SD_DMA_TGT), 
        .SD_DMA_PARTIAL(bench_SD_DMA_PARTIAL), 
        .SD_DMA_PARTIAL_START(bench_SD_DMA_PARTIAL_START), 
        .SD_DMA_PARTIAL_END(bench_SD_DMA_PARTIAL_END), 
        .dac_addr_out(bench_dac_addr_out), 
        .DAC_STATUS(bench_DAC_STATUS), 
        .dac_play_out(bench_dac_play_out), 
        .dac_reset_out(bench_dac_reset_out), 
        .msu_addr_out(bench_msu_addr_out), 
        .MSU_STATUS(bench_MSU_STATUS), 
        .msu_status_reset_out(bench_msu_status_reset_out), 
        .msu_status_set_out(bench_msu_status_set_out), 
        .msu_status_reset_we(bench_msu_status_reset_we), 
        .msu_addressrq(bench_msu_addressrq), 
        .msu_trackrq(bench_msu_trackrq), 
        .msu_volumerq(bench_msu_volumerq), 
        .msu_ptr_out(bench_msu_ptr_out), 
        .msu_reset_out(bench_msu_reset_out), 
        .bsx_regs_reset_out(bench_bsx_regs_reset_out), 
        .bsx_regs_set_out(bench_bsx_regs_set_out), 
        .bsx_regs_reset_we(bench_bsx_regs_reset_we), 
        .rtc_data_out(bench_rtc_data_out), 
        .rtc_pgm_we(bench_rtc_pgm_we), 
        .srtc_reset(bench_srtc_reset), 
        .dspx_pgm_data_out(bench_dspx_pgm_data_out), 
        .dspx_pgm_addr_out(bench_dspx_pgm_addr_out), 
        .dspx_pgm_we_out(bench_dspx_pgm_we_out), 
        .dspx_dat_data_out(bench_dspx_dat_data_out), 
        .dspx_dat_addr_out(bench_dspx_dat_addr_out), 
        .dspx_dat_we_out(bench_dspx_dat_we_out), 
        .dspx_reset_out(bench_dspx_reset_out), 
        .featurebits_out(bench_featurebits_out), 
        .snes_cpuclk_freq(bench_snes_cpuclk_freq), 
        .snes_sysclk_freq(bench_snes_sysclk_freq), 
        .snes_read_freq(bench_snes_read_freq), 
        .snes_write_freq(bench_snes_write_freq), 
        .snes_pard_freq(bench_snes_pard_freq), 
        .snes_pawr_freq(bench_snes_pawr_freq), 
        .snes_refresh_freq(bench_snes_refresh_freq), 
        .snes_romsel_freq(bench_snes_romsel_freq), 
        .mcu_bram_addr(bench_mcu_bram_addr), 
        .mcu_bram_data_in(bench_mcu_bram_data_in), 
        .mcu_bram_data_out(bench_mcu_bram_data_out), 
        .mcu_bram_we(bench_mcu_bram_we)
    );

	initial
	begin
		$monitor($time, " bench_reset = %b, clk = %b , cmd_ready = %b , param_ready = %b , cmd_data = %b , param_data = %b , mcu_rq_rdy = %b , mcu_data_in = %b , spi_byte_cnt = %b , spi_bit_cnt = %b , SD_DMA_STATUS = %b , SD_DMA_NEXTADDR = %b , SD_DMA_SRAM_DATA = %b , SD_DMA_SRAM_WE = %b , DAC_STATUS = %b , MSU_STATUS = %b , msu_addressrq = %b , msu_trackrq = %b , msu_volumerq = %b , snes_cpuclk_freq = %b , snes_sysclk_freq = %b , snes_read_freq = %b , snes_write_freq = %b , snes_pard_freq = %b , snes_pawr_freq = %b , snes_refresh_freq = %b , snes_romsel_freq = %b , mcu_bram_data_in = %b , mcu_mapper = %b , mcu_rrq = %b , mcu_write = %b , mcu_wrq = %b , mcu_data_out = %b , spi_data_out = %b , addr_out = %b , saveram_mask_out = %b , rom_mask_out = %b , ramsel_out = %b , SD_DMA_EN = %b , SD_DMA_TGT = %b , SD_DMA_PARTIAL = %b , SD_DMA_PARTIAL_START = %b , SD_DMA_PARTIAL_END = %b , dac_addr_out = %b , dac_play_out = %b , dac_reset_out = %b , msu_addr_out = %b , msu_status_reset_out = %b , msu_status_set_out = %b , msu_status_reset_we = %b , msu_ptr_out = %b , msu_reset_out = %b , bsx_regs_reset_out = %b , bsx_regs_set_out = %b , bsx_regs_reset_we = %b , rtc_data_out = %b , rtc_pgm_we = %b , srtc_reset = %b , dspx_pgm_data_out = %b , dspx_pgm_addr_out = %b , dspx_pgm_we_out = %b , dspx_dat_data_out = %b , dspx_dat_addr_out = %b , dspx_dat_we_out = %b , dspx_reset_out = %b , featurebits_out = %b , mcu_bram_addr = %b , mcu_bram_data_out = %b , mcu_bram_we = %b  ",
			bench_reset, bench_clk, bench_cmd_ready, bench_param_ready, bench_cmd_data, bench_param_data, bench_mcu_rq_rdy, bench_mcu_data_in, bench_spi_byte_cnt, bench_spi_bit_cnt, bench_SD_DMA_STATUS, bench_SD_DMA_NEXTADDR, bench_SD_DMA_SRAM_DATA, bench_SD_DMA_SRAM_WE, bench_DAC_STATUS, bench_MSU_STATUS, bench_msu_addressrq, bench_msu_trackrq, bench_msu_volumerq, bench_snes_cpuclk_freq, bench_snes_sysclk_freq, bench_snes_read_freq, bench_snes_write_freq, bench_snes_pard_freq, bench_snes_pawr_freq, bench_snes_refresh_freq, bench_snes_romsel_freq, bench_mcu_bram_data_in, bench_mcu_mapper, bench_mcu_rrq, bench_mcu_write, bench_mcu_wrq, bench_mcu_data_out, bench_spi_data_out, bench_addr_out, bench_saveram_mask_out, bench_rom_mask_out, bench_ramsel_out, bench_SD_DMA_EN, bench_SD_DMA_TGT, bench_SD_DMA_PARTIAL, bench_SD_DMA_PARTIAL_START, bench_SD_DMA_PARTIAL_END, bench_dac_addr_out, bench_dac_play_out, bench_dac_reset_out, bench_msu_addr_out, bench_msu_status_reset_out, bench_msu_status_set_out, bench_msu_status_reset_we, bench_msu_ptr_out, bench_msu_reset_out, bench_bsx_regs_reset_out, bench_bsx_regs_set_out, bench_bsx_regs_reset_we, bench_rtc_data_out, bench_rtc_pgm_we, bench_srtc_reset, bench_dspx_pgm_data_out, bench_dspx_pgm_addr_out, bench_dspx_pgm_we_out, bench_dspx_dat_data_out, bench_dspx_dat_addr_out, bench_dspx_dat_we_out, bench_dspx_reset_out, bench_featurebits_out, bench_mcu_bram_addr, bench_mcu_bram_data_out, bench_mcu_bram_we);
	end

	initial
	begin
		#199 $finish;
	end

endmodule
