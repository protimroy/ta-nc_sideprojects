//////////////////////////////////////////////////////////////
//                                                          //
// This testbench has been generated by the Verilog         //
// testbench generator                .                     //
// Copyright (c) 2012-2022 EDAUtils LLP                 //
// Contact help@edautils.com  for support/info.//
//                                                          //
//                                                          //
//////////////////////////////////////////////////////////////
//
//
// Generated by : protim on 4/24/25, 3:42 AM
//
//
module testbench;
	reg [0:13] indata_array;
	reg bench_reset;
	wire bench_CCLK;
	wire bench_resetlcd;
	wire bench_clearlcd;
	wire bench_homelcd;
	wire bench_datalcd;
	wire bench_addrlcd;
	wire bench_lcdreset;
	wire bench_lcdclear;
	wire bench_lcdhome;
	wire bench_lcddata;
	wire bench_lcdaddr;
	wire bench_rslcd;
	wire bench_rwlcd;
	wire bench_elcd;
	wire [3:0]bench_lcdd;
	wire [7:0]bench_lcddatin;
	wire bench_initlcd;



	assign bench_CCLK = indata_array[0:0];
	assign bench_resetlcd = indata_array[1:1];
	assign bench_clearlcd = indata_array[2:2];
	assign bench_homelcd = indata_array[3:3];
	assign bench_datalcd = indata_array[4:4];
	assign bench_addrlcd = indata_array[5:5];
	assign bench_lcddatin = indata_array[6:13];
	assign bench_initlcd = indata_array[14:14];

	initial
	begin
    $dumpfile("7.vcd");
    $dumpvars(1, testbench);
		#10 bench_reset = 1'b0;
	end

	always
	begin
		#5  indata_array = $random;
	end

	lcd inst(
        .CCLK(bench_CCLK), 
        .resetlcd(bench_resetlcd), 
        .clearlcd(bench_clearlcd), 
        .homelcd(bench_homelcd), 
        .datalcd(bench_datalcd), 
        .addrlcd(bench_addrlcd), 
        .lcdreset(bench_lcdreset), 
        .lcdclear(bench_lcdclear), 
        .lcdhome(bench_lcdhome), 
        .lcddata(bench_lcddata), 
        .lcdaddr(bench_lcdaddr), 
        .rslcd(bench_rslcd), 
        .rwlcd(bench_rwlcd), 
        .elcd(bench_elcd), 
        .lcdd(bench_lcdd), 
        .lcddatin(bench_lcddatin), 
        .initlcd(bench_initlcd)
    );

	initial
	begin
		$monitor($time, " bench_reset = %b, CCLK = %b , resetlcd = %b , clearlcd = %b , homelcd = %b , datalcd = %b , addrlcd = %b , lcddatin = %b , initlcd = %b , lcdreset = %b , lcdclear = %b , lcdhome = %b , lcddata = %b , lcdaddr = %b , rslcd = %b , rwlcd = %b , elcd = %b , lcdd = %b  ",
			bench_reset, bench_CCLK, bench_resetlcd, bench_clearlcd, bench_homelcd, bench_datalcd, bench_addrlcd, bench_lcddatin, bench_initlcd, bench_lcdreset, bench_lcdclear, bench_lcdhome, bench_lcddata, bench_lcdaddr, bench_rslcd, bench_rwlcd, bench_elcd, bench_lcdd);
	end

	initial
	begin
		#199 $finish;
	end

endmodule
