//////////////////////////////////////////////////////////////
//                                                          //
// This testbench has been generated by the Verilog         //
// testbench generator                .                     //
// Copyright (c) 2012-2022 EDAUtils LLP                 //
// Contact help@edautils.com  for support/info.//
//                                                          //
//                                                          //
//////////////////////////////////////////////////////////////
//
//
// Generated by : protim on 4/24/25, 4:14 AM
//
//
module testbench;
	reg [0:81] indata_array;
	reg bench_reset;
	wire bench_clk;
	wire bench_rst;
	wire [31:0]bench_addr;
	wire bench_drw;
	wire [31:0]bench_din;
	wire [31:0]bench_dout;
	wire bench_rdy;
	wire bench_sram_clk;
	wire bench_sram_adv;
	wire bench_sram_cre;
	wire bench_sram_ce;
	wire bench_sram_oe;
	wire bench_sram_lb;
	wire bench_sram_ub;
	wire [23:1]bench_sram_addr;
	wire bench_sram_we;
	wire [15:0]bench_sram_data;



	assign bench_clk = indata_array[0:0];
	assign bench_rst = indata_array[1:1];
	assign bench_addr = indata_array[2:33];
	assign bench_drw = indata_array[34:34];
	assign bench_din = indata_array[35:66];
	assign bench_sram_data = indata_array[67:82];

	initial
	begin
    $dumpfile("71.vcd");
    $dumpvars(1, testbench);
		#10 bench_reset = 1'b0;
	end

	always
	begin
		#5  indata_array = $random;
	end

	sram_interface inst(
        .clk(bench_clk), 
        .rst(bench_rst), 
        .addr(bench_addr), 
        .drw(bench_drw), 
        .din(bench_din), 
        .dout(bench_dout), 
        .rdy(bench_rdy), 
        .sram_clk(bench_sram_clk), 
        .sram_adv(bench_sram_adv), 
        .sram_cre(bench_sram_cre), 
        .sram_ce(bench_sram_ce), 
        .sram_oe(bench_sram_oe), 
        .sram_lb(bench_sram_lb), 
        .sram_ub(bench_sram_ub), 
        .sram_addr(bench_sram_addr), 
        .sram_we(bench_sram_we), 
        .sram_data(bench_sram_data)
    );

	initial
	begin
		$monitor($time, " bench_reset = %b, clk = %b , rst = %b , addr = %b , drw = %b , din = %b , sram_data = %b , dout = %b , rdy = %b , sram_clk = %b , sram_adv = %b , sram_cre = %b , sram_ce = %b , sram_oe = %b , sram_lb = %b , sram_ub = %b , sram_addr = %b , sram_we = %b  ",
			bench_reset, bench_clk, bench_rst, bench_addr, bench_drw, bench_din, bench_sram_data, bench_dout, bench_rdy, bench_sram_clk, bench_sram_adv, bench_sram_cre, bench_sram_ce, bench_sram_oe, bench_sram_lb, bench_sram_ub, bench_sram_addr, bench_sram_we);
	end

	initial
	begin
		#199 $finish;
	end

endmodule
